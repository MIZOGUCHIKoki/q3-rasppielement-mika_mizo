@------------------------------------
@ subRutine : display, writeProcess
@ target time = r7,	r4(LED)
@ not Reserved register = r0, r6
@------------------------------------
	.equ			count,	100000		@ 0.1sec
	.equ			led,		500000    @ 0.5sec
	.include	"common.s"
	.section 	.init
	.global 	_start, nb_all
_start:
	mov	sp,		#STACK					@ initalize stack pointer
	ldr r9,		=TIMER_BASE
@ initialize target time
	ldr	r7,		[r9, #GPFSEL1]
	ldr	r0,		=led
	add	r4,		r0,	r7  @ r4 :: LED
	ldr	r0,		=count
	add	r7,		r0,	r7  @ r7 :: count
@ setting loop variable
	mov	r11,	#0
	mov	r12,	#0
loop:
@ Task: [ Find out if a button is pressed ]
  
@ Task: [ Struct strings ]
	ldr		r6,		[r9, #GPFSEL1]	@ r6 current
	cmp		r6,		r7			@	Current, Target
	bcc 	endp					@ Currnet < Target
	ldr		r0,		=count	
	add		r7,	r0,	r7	@ update target time
  bl  writeProcess  @ pushed register {r1}
endp:
	bl	display
	b	  loop
@	----- data base -----
nb_0:
	.byte	0x0,	0xe,	0xa,	0xa,	0xa,	0xe,	0x0,	0x0
nb_1:
	.byte	0x0,	0x4,	0xc,	0x4,	0x4,	0xe,	0x0,	0x0
nb_2:
	.byte	0x0,	0xe,	0x2,	0xe,	0x8,	0xe,	0x0,	0x0
nb_3:
	.byte	0x0,	0xe,	0x2,	0xe,	0x2,	0xe,	0x0,	0x0
nb_4:
	.byte	0x0,	0xa,	0xa,	0xe,	0x2,	0x2,	0x0,	0x0
nb_5:
	.byte	0x0,	0xe,	0x8,	0xe,	0x2,	0xe,	0x0,	0x0
nb_6:
	.byte	0x0,	0xe,	0x8,	0xe,	0xa,	0xe,	0x0,	0x0
nb_7:
	.byte	0x0,	0xe,	0xa,	0x2,	0x2,	0x2,	0x0,	0x0
nb_8:
	.byte	0x0,	0xe,	0xa,	0xe,	0xa,	0xe,	0x0,	0x0
nb_9:
	.byte	0x0,	0xe,	0xa,	0xe,	0x2,	0xe,	0x0,	0x0
nb_all:	
	.word	nb_0,	nb_1,	nb_2,	nb_3,	nb_4,	nb_5,	nb_6,	nb_7, nb_8,	nb_9
	@	4byte		nb_all + 0 = nb_0,	nb_all + 4 = nb_1
	@	nb_all + [byte] = ??

	.section	.data
	.global		frame_buffer
frame_buffer:
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,0x0, 0x0
